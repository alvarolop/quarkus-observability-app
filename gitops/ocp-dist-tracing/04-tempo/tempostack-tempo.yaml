---
apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: tempo
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  observability:
    metrics:
      createServiceMonitors: true
      createPrometheusRules: true
  resources:
    total:
      limits:
        memory: 2Gi
        cpu: '2'
  search:
    maxDuration: 0s
    maxResultLimit: 20
  tenants:
    mode: openshift
    authentication: 
      - tenantName: dev
        tenantId: "dev-id"
      - tenantName: prod
        tenantId: "prod-id"
  template:
    compactor:
      replicas: 1
    distributor:
      component:
        replicas: 1
      # tls:
      #   enabled: false
    gateway:
      component:
        replicas: 1
      enabled: true
      # ingress:
      #   annotations:
      #     haproxy.router.openshift.io/timeout: 3m
      #   route: {}
    ingester:
      replicas: 1
    querier:
      replicas: 1
    queryFrontend:
      component:
        replicas: 1
      jaegerQuery:
        # authentication:
        #   enabled: true
        #   sar: '{"namespace": "openshift-tempo", "resource": "pods", "verb": "get"}'
        enabled: true
        monitorTab:
          enabled: true 
          prometheusEndpoint: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
  replicationFactor: 1
  storage:
    secret:
      name: s3-bucket-tempo-obs
      type: s3
  storageSize: 1Gi
  retention:
    global:
      traces: 48h0m0s
