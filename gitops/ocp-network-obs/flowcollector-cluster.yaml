---
apiVersion: flows.netobserv.io/v1beta2
kind: FlowCollector
metadata:
  name: cluster
spec:
  namespace: netobserv
  # networkPolicy:
  #   enable: true
  #   additionalNamespaces:
  #     - "openshift-console"
  #     - "openshift-monitoring"
  deploymentModel: Direct # Or Kafka for resiliency
  agent:
    ebpf:
      logLevel: info
      metrics:
        server:
          tls:
            insecureSkipVerify: false
            type: Disabled
      cacheMaxFlows: 100000
      # https://docs.redhat.com/en/documentation/openshift_container_platform/4.18/html-single/network_observability/index#network-observability-dns-tracking_nw-observe-network-traffic
      features:
       - DNSTracking
      #  - FlowRTT
      sampling: 50
      imagePullPolicy: IfNotPresent
      excludeInterfaces:
        - lo
      kafkaBatchSize: 1048576
      cacheActiveTimeout: 5s
  processor:
    logLevel: info
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 800Mi
    logTypes: Flows
    advanced:
      conversationEndTimeout: 10s
      conversationHeartbeatInterval: 30s
  loki:
    mode: LokiStack
  prometheus:
    querier:
      manual:
        tls:
          enable: false
          insecureSkipVerify: false
        url: 'http://prometheus:9090'
      mode: Auto
      timeout: 30s
  consolePlugin:
    logLevel: info
    advanced:
      port: 9001
      register: true
    enable: true
    portNaming:
      enable: true
    # https://docs.redhat.com/en/documentation/openshift_container_platform/4.18/html-single/network_observability/index#network-observability-config-quick-filters_network_observability
    quickFilters:
      - default: true
        filter:
          flow_layer: '"app"'
        name: Applications
      - filter:
          flow_layer: '"infra"'
        name: Infrastructure
      - default: true
        filter:
          dst_kind: '"Pod"'
          src_kind: '"Pod"'
        name: Pods network
      - filter:
          dst_kind: '"Service"'
        name: Services network
    imagePullPolicy: IfNotPresent
    autoscaler:
      maxReplicas: 3
      status: Disabled
    replicas: 1
  # exporters:
  #   - type: Kafka
  #       kafka:
  #         address: "kafka-cluster-kafka-bootstrap.netobserv"
  #         topic: netobserv-flows-export
  #         tls:
  #           enable: false
  #   - type: OpenTelemetry
  #       openTelemetry:
  #         targetHost: my-otelcol-collector-headless.otlp.svc
  #         targetPort: 4317
  #         type: grpc
  #         logs:
  #           enable: true
  #         metrics:
  #           enable: true
  #           prefix: netobserv
  #           pushTimeInterval: 20s
  #           expiryTime: 2m

