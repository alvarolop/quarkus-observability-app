apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: grafana-deployment
  annotations:
    description: Template to deploy a Grafana deployment on OCP.
    tags: grafana,community,operator
    iconClass: icon-cassandra
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
objects:

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        config.openshift.io/inject-trusted-cabundle: "true"
      name: ocp-injected-certs
      namespace: ${OPERATOR_NAMESPACE}

  - apiVersion: v1
    data:
      session_secret: Y2hhbmdlIG1lCg==
    kind: Secret
    metadata:
      name: grafana-proxy
      namespace: ${OPERATOR_NAMESPACE}
    type: Opaque

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: grafana-proxy
      namespace: ${OPERATOR_NAMESPACE}
    rules:
      - verbs:
          - create
        apiGroups:
          - authentication.k8s.io
        resources:
          - tokenreviews
      - verbs:
          - create
        apiGroups:
          - authorization.k8s.io
        resources:
          - subjectaccessreviews

  - apiVersion: authorization.openshift.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: grafana-proxy
      namespace: ${OPERATOR_NAMESPACE}
    roleRef:
      kind: ClusterRole
      name: grafana-proxy
    subjects:
      - kind: ServiceAccount
        name: grafana-sa
        namespace: ${OPERATOR_NAMESPACE}

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: grafana-cluster-monitoring-binding
      namespace: ${OPERATOR_NAMESPACE}
    subjects:
      - kind: ServiceAccount
        namespace: ${OPERATOR_NAMESPACE}
        name: grafana-sa
    roleRef:
      kind: ClusterRole
      name: cluster-monitoring-view
      apiGroup: rbac.authorization.k8s.io

  - apiVersion: grafana.integreatly.org/v1beta1
    kind: Grafana
    metadata:
      name: grafana
      namespace: ${OPERATOR_NAMESPACE}
      labels:
        app: grafana
        dashboards: grafana
    spec:
      serviceAccount:
        metadata:
          annotations:
            serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"grafana-route"}}'
      route:
        metadata:
          labels: 
            app: grafana
        spec:
          port:
            targetPort: https
          tls:
            termination: reencrypt
          to:
            kind: Service
            name: grafana-service
            weight: 100
          wildcardPolicy: None
      deployment:
        spec:
          template:
            spec:
              volumes:
              - name: grafana-tls
                secret:
                  secretName: grafana-tls
              - name: grafana-proxy
                secret:
                  secretName: grafana-proxy
              - name: ocp-injected-certs
                configMap:
                  name: ocp-injected-certs
              containers:
                - args:
                    - '-provider=openshift'
                    - '-pass-basic-auth=false'
                    - '-https-address=:9091'
                    - '-http-address='
                    - '-email-domain=*'
                    - '-upstream=http://localhost:3000'
                    - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
                    - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
                    - '-tls-cert=/etc/tls/private/tls.crt'
                    - '-tls-key=/etc/tls/private/tls.key'
                    - '-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token'
                    - '-cookie-secret-file=/etc/proxy/secrets/session_secret'
                    - '-openshift-service-account=grafana-sa'
                    - '-openshift-ca=/etc/pki/tls/cert.pem'
                    - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
                    - '-openshift-ca=/etc/proxy/certs/ca-bundle.crt'
                    - '-skip-auth-regex=^/metrics'
                  image: 'quay.io/openshift/origin-oauth-proxy'
                  name: grafana-proxy
                  ports:
                    - containerPort: 9091
                      name: https
                  resources: { }
                  volumeMounts:
                    - mountPath: /etc/tls/private
                      name: grafana-tls
                      readOnly: false
                    - mountPath: /etc/proxy/secrets
                      name: grafana-proxy
                      readOnly: false
                    - mountPath: /etc/proxy/certs
                      name: ocp-injected-certs
                      readOnly: false
      service:
        metadata:
          annotations:
            service.beta.openshift.io/serving-cert-secret-name: grafana-tls
        spec:
          ports:
            - name: https
              port: 9091
              protocol: TCP
              targetPort: https
      client:
        preferIngress: false
      config:
        log:
          mode: "console"
        auth.anonymous:
          enabled: "True"
        auth:
          disable_login_form: "False"
          disable_signout_menu: "True"
        auth.basic:
          enabled: "True"
        auth.proxy:
          enabled: "True"
          enable_login_token: "True"
          header_property: "username"
          header_name: "X-Forwarded-User"
parameters:
- name: OPERATOR_NAMESPACE
  description: "The project where the operator will be installed."
  required: false
  value: "grafana"