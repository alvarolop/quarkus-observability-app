apiVersion: template.openshift.io/v1
kind: Template
objects:

  - apiVersion: project.openshift.io/v1
    kind: Project
    metadata:
      name: ${TRACING_DEPLOYMENT_PROJECT}
      annotations:
        openshift.io/description: "Project to deploy Distributed Tracing based on Grafana Tempo"
        openshift.io/display-name: "Openshift Tempo"

  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${DEPLOYMENT_NAME}-object-storage-bucket
      namespace: ${TRACING_DEPLOYMENT_PROJECT}
    stringData:
      name: ${AWS_S3_BUCKET}
      endpoint: https://s3.${AWS_DEFAULT_REGION}.amazonaws.com
      bucket: ${AWS_S3_BUCKET}
      access_key_id: "${AWS_ACCESS_KEY_ID}"
      access_key_secret: "${AWS_SECRET_ACCESS_KEY}"
    type: Opaque


  # This object is based on the default one of the installation documentation.
  # Later, I've added all the default config.
  - apiVersion: tempo.grafana.com/v1alpha1
    kind: TempoStack
    metadata:
      name: ${DEPLOYMENT_NAME}
      namespace: ${TRACING_DEPLOYMENT_PROJECT}
    spec:
      observability:
        metrics:
          createServiceMonitors: true
          createPrometheusRules: true
      replicationFactor: 1
      resources:
        total:
          limits:
            memory: 2Gi
            cpu: '2'
      retention:
        global:
          traces: 48h0m0s
      storageSize: 1Gi
      storage:
        secret:
          name: ${DEPLOYMENT_NAME}-object-storage-bucket
          type: s3
      template:
        # gateway:
        #   enabled: true
        queryFrontend:
          jaegerQuery:
            enabled: true
            ingress:
              route:
                termination: edge
              type: route
            monitorTab:
              enabled: true 
              prometheusEndpoint: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091

  - kind: OpenTelemetryCollector
    apiVersion: opentelemetry.io/v1alpha1
    metadata:
      name: otel
      namespace: ${TRACING_DEPLOYMENT_PROJECT}
    spec:
      mode: deployment
      observability:
        metrics:
          enableMetrics: true 
      config: |
        connectors:
          spanmetrics: 
            metrics_flush_interval: 15s

        receivers:
          otlp: 
            protocols:
              grpc:
              http:

        exporters:
          otlp:
            endpoint: tempo-${DEPLOYMENT_NAME}-distributor.${TRACING_DEPLOYMENT_PROJECT}.svc.cluster.local:4317
            tls:
              insecure: true
          prometheus: 
            endpoint: 0.0.0.0:8889
            add_metric_suffixes: false
            resource_to_telemetry_conversion:
              enabled: true # by default resource attributes are dropped

        service:
          pipelines:
            traces:
              receivers: [otlp]
              exporters: [otlp, spanmetrics] 
            metrics:
              receivers: [spanmetrics] 
              exporters: [prometheus]
      
      
parameters:
  - name: TRACING_DEPLOYMENT_PROJECT
    description: "The project where Tempo will be deployed."
    required: false
    value: openshift-tempo
  - name: DEPLOYMENT_NAME
    description: "The name of the Tempo instance."
    required: false
    value: tempo
  - name: AWS_ACCESS_KEY_ID
    description: "AWS access_key_id."
    required: true
  - name: AWS_SECRET_ACCESS_KEY
    description: "AWS access_key_secret."
    required: true
  - name: AWS_DEFAULT_REGION
    description: "AWS region."
    required: true
  - name: AWS_S3_BUCKET
    description: "S3 Bucket name (You can modify it in the script)."
    required: false
    value: tempostack-s3-bucket
